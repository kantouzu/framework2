<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cisdi.business.dao.UserInfoDao">

  <resultMap id="BaseResultMap" type="com.cisdi.business.entity.UserInfo">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="pwd" jdbcType="VARCHAR" property="pwd" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="departNo" jdbcType="VARCHAR" property="departno" />
		<result column="usable" jdbcType="VARCHAR" property="usable" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="deleteflag" jdbcType="VARCHAR" property="deleteflag" />
  </resultMap>
  <resultMap id="mapResultMap" type="java.util.HashMap">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="pwd" jdbcType="VARCHAR" property="pwd" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="departNo" jdbcType="VARCHAR" property="departno" />
		<result column="usable" jdbcType="VARCHAR" property="usable" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="deleteflag" jdbcType="VARCHAR" property="deleteflag" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
#{listItem}                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
      <if test="otherCondition != null">
	      ${otherCondition}
	    </if>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
#{listItem}                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
      <if test="otherCondition != null">
	      ${otherCondition}
	    </if>
    </where>
  </sql>
  
  <sql id="Table_Join_Clause" >
      <if test="tableJoin != null" >
      	<trim prefix="" suffix="" prefixOverrides="" >
      		<foreach collection="tableJoin" item="tableJoin" separator=" " >
              	${tableJoin.joinType} ${tableJoin.tableName} ${tableJoin.alias}
              	<if test="tableJoin.fieldJoin != null" >
              		on 
              		<trim prefix="(" suffix=")" prefixOverrides="" >
              			<foreach collection="tableJoin.fieldJoin" item="fieldJoin" separator=" || " >
              				${fieldJoin.baseField}
              			</foreach>
              		</trim>
              		=
              		<trim prefix="(" suffix=")" prefixOverrides="" >
              			<foreach collection="tableJoin.fieldJoin" item="fieldJoin" separator=" || " >
              				${fieldJoin.dependField}
              			</foreach>
              		</trim>
              	</if>
      		</foreach>
      	</trim>
      </if>
  </sql>
  
  <sql id="Base_Column_List">
		userInfo.id,
		userInfo.user_name,
		userInfo.pwd,
		userInfo.name,
		userInfo.departNo,
		userInfo.usable,
		userInfo.phone,
		userInfo.email,
		userInfo.create_time,
		userInfo.update_time,
		userInfo.deleteflag
  </sql>  
  
  <select id="selectByExample" parameterType="com.cisdi.business.example.UserInfoExample" resultMap="mapResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    ${@com.cisdi.base.util.BaseUtil@transEnumValueToName("userInfo.usable", "YesOrNo")} usableName,
    ${@com.cisdi.base.util.BaseUtil@transEnumValueToName("userInfo.deleteflag", "DeleteFlag")} deleteflagName,
    roleName.roleNames, departName.departNames,
    <include refid="Base_Column_List" />
    from user_info userInfo 
    <include refid="Table_Join_Clause" />
    LEFT JOIN (select urr.user_id,GROUP_CONCAT(role.role_name) roleNames from user_rel_role urr left join role_info role on urr.role_id = role.id group by urr.user_id) roleName
	on userInfo.id = roleName.user_id
    LEFT JOIN (select urd.user_id,GROUP_CONCAT(depart.name) departNames from user_rel_depart urd left join depart_info depart on urd.depart_id = depart.id group by urd.user_id) departName
    on userInfo.id = departName.user_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      ${orderByClause}
    </if>
    <if test="limitStart != null">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>    
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_info userInfo 
    where userInfo.id = #{id,jdbcType=INTEGER}
  </select>
  
 <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete userInfo from user_info userInfo
    where userInfo.id = #{id,jdbcType=INTEGER}
  </delete>   
  
  <delete id="deleteByExample" parameterType="com.cisdi.business.example.UserInfoExample" >
    delete userInfo from user_info userInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <delete id="deleteByExampleInLogic" parameterType="com.cisdi.business.example.UserInfoExample" >
    update user_info userInfo set userInfo.deleteflag = '1'
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.cisdi.business.entity.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
		  <if test="id != null">
			id,
		  </if>		
		  <if test="userName != null">
			user_name,
		  </if>		
		  <if test="pwd != null">
			pwd,
		  </if>		
		  <if test="name != null">
			name,
		  </if>		
		  <if test="departno != null">
			departNo,
		  </if>		
		  <if test="usable != null">
			usable,
		  </if>		
		  <if test="phone != null">
			phone,
		  </if>		
		  <if test="email != null">
			email,
		  </if>		
		  <if test="createTime != null">
			create_time,
		  </if>		
		  <if test="updateTime != null">
			update_time,
		  </if>		
		  <if test="deleteflag != null">
			deleteflag,
		  </if>		
    </trim>  
    <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id, jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName, jdbcType=VARCHAR},
			</if>
			<if test="pwd != null">
				#{pwd, jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name, jdbcType=VARCHAR},
			</if>
			<if test="departno != null">
				#{departno, jdbcType=VARCHAR},
			</if>
			<if test="usable != null">
				#{usable, jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone, jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime, jdbcType=TIMESTAMP},
			</if>
			<if test="deleteflag != null">
				#{deleteflag, jdbcType=VARCHAR},
			</if>
    </trim>
  </insert>
  
  <select id="countByExample" parameterType="com.cisdi.business.example.UserInfoExample" resultType="java.lang.Integer" >
    select count(1) from user_info userInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.cisdi.business.entity.UserInfo">
    update user_info 
    <set>
			<if test="id != null">
				id = #{id,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="pwd != null">
				pwd = #{pwd,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="departno != null">
				departNo = #{departno,jdbcType=VARCHAR},
			</if>
			<if test="usable != null">
				usable = #{usable,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleteflag != null">
				deleteflag = #{deleteflag,jdbcType=VARCHAR},
			</if>
   
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>   
  
</mapper>
