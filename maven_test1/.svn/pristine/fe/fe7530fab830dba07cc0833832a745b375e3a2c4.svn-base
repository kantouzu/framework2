package com.cisdi.business.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.cisdi.base.common.constant.CommonConstant;
import com.cisdi.base.controller.BaseController;
import com.cisdi.business.entity.UserRelRole;
import com.cisdi.business.example.UserRelRoleExample;
import com.cisdi.business.service.UserRelRoleService;

import com.cisdi.base.common.enums.CommonEnumType.YesOrNo;
import com.cisdi.base.common.json.AjaxJson;
import com.cisdi.base.common.responseBean.LayGridReturn;
import com.cisdi.business.requestBean.DataGrid;
import com.cisdi.business.common.annotation.SystemLog;

@Controller
@RequestMapping(value="userRelRoleController")
public class UserRelRoleController extends BaseController {

    @Autowired
    private UserRelRoleService userRelRoleService;
    
    @RequestMapping(value = "dataList")
    @ResponseBody
    public LayGridReturn dataList(HttpServletRequest req, UserRelRole userRelRole, UserRelRoleExample userRelRoleExample, DataGrid datagrid) {
    	userRelRoleExample.setLimitStart(datagrid.getStartRow());
    	userRelRoleExample.setLimitEnd(datagrid.getLimit());
    	userRelRoleExample.setOrderByClause("order by id desc");
    	userRelRoleExample.or().andDeleteflagEqualTo(YesOrNo.Âê¶.getValue());
    	return userRelRoleService.selectDataGridByExample(userRelRoleExample);
    	
    }
    
    @RequestMapping(value = "doSaveOrUpdate", method=RequestMethod.POST)
    @ResponseBody
    @SystemLog(module = CommonConstant.LOG_USER_REL_ROLE,description = "user_rel_role",businessType=CommonConstant.BUSINESS_ADDOREDIT)
    public AjaxJson doSaveOrUpdate(HttpServletRequest req, UserRelRole userRelRole) {
    	AjaxJson j = null;
        try {
        	j = userRelRoleService.saveOrUpdate(userRelRole);
        	return j;
		} catch (Exception e) {
			e.printStackTrace();
			return AjaxJson.returnJsonObj(false);
		}
    } 
    
    @RequestMapping(value = "batchDelete", method=RequestMethod.POST)
    @ResponseBody
    @SystemLog(module = CommonConstant.LOG_USER_REL_ROLE,description = "user_rel_role",businessType=CommonConstant.BUSINESS_DEL)
    public AjaxJson batchDelete(HttpServletRequest req, @RequestParam List<Integer> ids) {
        UserRelRoleExample userRelRoleExample = new UserRelRoleExample();
        userRelRoleExample.or().andIdIn(ids);
        return userRelRoleService.deleteByExample(userRelRoleExample);
    }    
    
    @RequestMapping(value = "batchDeleteInLogic", method=RequestMethod.POST)
    @ResponseBody
    @SystemLog(module = CommonConstant.LOG_USER_REL_ROLE,description = "user_rel_role",businessType=CommonConstant.BUSINESS_DELINLOGIC)
    public AjaxJson batchDeleteInLogic(HttpServletRequest req, @RequestParam List<Integer> ids) {
        UserRelRoleExample userRelRoleExample = new UserRelRoleExample();
        userRelRoleExample.or().andIdIn(ids);
        return userRelRoleService.deleteByExampleInLogic(userRelRoleExample);
    }  
}