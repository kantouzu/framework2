<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cisdi.business.dao.LogInfoDao">

  <resultMap id="BaseResultMap" type="com.cisdi.business.entity.LogInfo">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="ip_address" property="ipAddress" />
		<result column="module_type" property="moduleType" />
		<result column="operation" property="operation" />
		<result column="is_success" property="isSuccess" />
		<result column="request_param" property="requestParam" />
		<result column="response_result" property="responseResult" />
		<result column="err_msg" property="errMsg" />
		<result column="remark" property="remark" />
		<result column="client_type" property="clientType" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="deleteflag" property="deleteflag" />
  </resultMap>
  
  <resultMap id="mapResultMap" type="java.util.HashMap">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="ip_address" property="ipAddress" />
		<result column="module_type" property="moduleType" />
		<result column="operation" property="operation" />
		<result column="is_success" property="isSuccess" />
		<result column="request_param" property="requestParam" />
		<result column="response_result" property="responseResult" />
		<result column="err_msg" property="errMsg" />
		<result column="remark" property="remark" />
		<result column="client_type" property="clientType" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="deleteflag" property="deleteflag" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
#{listItem}                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
#{listItem}                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
		id,
		user_id,
		ip_address,
		module_type,
		operation,
		is_success,
		request_param,
		response_result,
		err_msg,
		remark,
		client_type,
		create_time,
		update_time,
		deleteflag
  </sql>  
  
  <select id="selectByExample" parameterType="com.cisdi.business.example.LogInfoExample" resultMap="mapResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
		
		
		
		
		
		${@com.cisdi.base.util.BaseUtil@transEnumValueToName("is_success", "YesOrNo")} isSuccessName,
		
		
		
		
		${@com.cisdi.base.util.BaseUtil@transEnumValueToName("client_type", "ClientType")} clientTypeName,
		
		
		${@com.cisdi.base.util.BaseUtil@transEnumValueToName("deleteflag", "DeleteFlag")} deleteflagName,
    <include refid="Base_Column_List" />
    from log_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
${orderByClause}    </if>
    <if test="limitStart != null">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>    
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from log_info
    where id = #{id}
  </select>
  
 <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log_info
    where id = #{id}
  </delete>   
  
  <delete id="deleteByExample" parameterType="com.cisdi.business.example.LogInfoExample" >
    delete from log_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <delete id="deleteByExampleInLogic" parameterType="com.cisdi.business.example.LogInfoExample" >
    update log_info set deleteflag = '1'
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insertSelective" parameterType="com.cisdi.business.entity.LogInfo">
    insert into log_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
		  <if test="id != null">
			id,
		  </if>		
		  <if test="userId != null">
			user_id,
		  </if>		
		  <if test="ipAddress != null">
			ip_address,
		  </if>		
		  <if test="moduleType != null">
			module_type,
		  </if>		
		  <if test="operation != null">
			operation,
		  </if>		
		  <if test="isSuccess != null">
			is_success,
		  </if>		
		  <if test="requestParam != null">
			request_param,
		  </if>		
		  <if test="responseResult != null">
			response_result,
		  </if>		
		  <if test="errMsg != null">
			err_msg,
		  </if>		
		  <if test="remark != null">
			remark,
		  </if>		
		  <if test="clientType != null">
			client_type,
		  </if>		
		  <if test="createTime != null">
			create_time,
		  </if>		
		  <if test="updateTime != null">
			update_time,
		  </if>		
		  <if test="deleteflag != null">
			deleteflag,
		  </if>		
    </trim>  
    <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="userId != null">
				#{userId},
			</if>
			<if test="ipAddress != null">
				#{ipAddress},
			</if>
			<if test="moduleType != null">
				#{moduleType},
			</if>
			<if test="operation != null">
				#{operation},
			</if>
			<if test="isSuccess != null">
				#{isSuccess},
			</if>
			<if test="requestParam != null">
				#{requestParam},
			</if>
			<if test="responseResult != null">
				#{responseResult},
			</if>
			<if test="errMsg != null">
				#{errMsg},
			</if>
			<if test="remark != null">
				#{remark},
			</if>
			<if test="clientType != null">
				#{clientType},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			<if test="deleteflag != null">
				#{deleteflag},
			</if>
    </trim>
  </insert>
  
  <select id="countByExample" parameterType="com.cisdi.business.example.LogInfoExample" resultType="java.lang.Integer" >
    select count(1) from log_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.cisdi.business.entity.LogInfo">
    update log_info 
    <set>
			<if test="id != null">
				id = #{id},
			</if>
			<if test="userId != null">
				user_id = #{userId},
			</if>
			<if test="ipAddress != null">
				ip_address = #{ipAddress},
			</if>
			<if test="moduleType != null">
				module_type = #{moduleType},
			</if>
			<if test="operation != null">
				operation = #{operation},
			</if>
			<if test="isSuccess != null">
				is_success = #{isSuccess},
			</if>
			<if test="requestParam != null">
				request_param = #{requestParam},
			</if>
			<if test="responseResult != null">
				response_result = #{responseResult},
			</if>
			<if test="errMsg != null">
				err_msg = #{errMsg},
			</if>
			<if test="remark != null">
				remark = #{remark},
			</if>
			<if test="clientType != null">
				client_type = #{clientType},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			<if test="deleteflag != null">
				deleteflag = #{deleteflag},
			</if>
		<if test="updateTime == null">
			update_time = sysdate(),
		</if>
   
    </set>
    where id = #{id}
  </update>   
  
</mapper>
