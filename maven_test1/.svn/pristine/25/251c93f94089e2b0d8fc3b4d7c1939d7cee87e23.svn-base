package com.cisdi.business.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.cisdi.base.common.enums.CommonEnumType.YesOrNo;
import com.cisdi.base.common.json.AjaxJson;
import com.cisdi.base.common.responseBean.LayGridReturn;
import com.cisdi.base.controller.BaseController;
import com.cisdi.business.entity.UserInfo;
import com.cisdi.business.example.UserInfoExample;
import com.cisdi.business.requestBean.DataGrid;
import com.cisdi.business.service.UserInfoService;

@Controller
@RequestMapping(value="userInfoController")
public class UserInfoController extends BaseController {

    @Autowired
    private UserInfoService userInfoService;
    
    @RequestMapping(value = "pageList")
    public ModelAndView list(UserInfo userInfo, UserInfoExample userInfoExample) {
        
        ModelAndView mv = new ModelAndView();
        mv.setViewName("UserInfo/UserInfoList");
        return mv;
    }
    
    @RequestMapping(value = "dataList")
    @ResponseBody
    public LayGridReturn dataList(UserInfo userInfo, UserInfoExample userInfoExample, DataGrid datagrid) {
    	userInfoExample.setLimitStart(datagrid.getStartRow());
    	userInfoExample.setLimitEnd(datagrid.getLimit());
    	userInfoExample.setOrderByClause("order by id asc");
    	userInfoExample.or().andDeleteflagEqualTo(YesOrNo.Âê¶.getValue());
    	return userInfoService.selectDataGridByExample(userInfoExample);
    	
    }
    
    @RequestMapping(value = "goAddOrEdit")
    public ModelAndView goAddOrEdit(UserInfo userInfo, UserInfoExample userInfoExample) {
        
        ModelAndView mv = new ModelAndView();
        UserInfo entity = userInfoService.selectByPrimaryKey(userInfo.getId());
        mv.setViewName("UserInfo/UserInfoEdit");
        mv.addObject("userInfo", entity);
        return mv;
    }
    
    @RequestMapping(value = "add", method=RequestMethod.POST)
    @ResponseBody
    public AjaxJson add(UserInfo userInfo) {
        
        return userInfoService.insertSelective(userInfo);
    }    
    
    @RequestMapping(value = "update", method=RequestMethod.POST)
    @ResponseBody
    public AjaxJson update(UserInfo userInfo) {
        
        return userInfoService.updateByPrimaryKeySelective(userInfo);
    }
    
    @RequestMapping(value = "delete", method=RequestMethod.POST)
    @ResponseBody
    public AjaxJson delete(Integer id) {
        
        return userInfoService.deleteByPrimaryKey(id);
    }    
}